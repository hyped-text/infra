version: "3.5"

volumes:
  database:

networks:
  ingres:

services:
  traefik:
    image: traefik
    networks:
      - ingres
    ports:
      - 80:80
    command: --api --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.enable: "true"
      traefik.network: "ingres"
      traefik.frontend.rule: "Host:traefik.localhost"
      traefik.port: 8080

  gateway:
    image: hypedtext/gateway:latest
    env_file: .env
    command: npm run start:dev
    ports:
      - 8080:8080
    volumes:
      - ./modules/gateway:/app
    networks:
      - ingres
    labels:
      traefik.enable: "true"
      traefik.network: "ingres"
      traefik.frontend.rule: "Host:app.localhost"
      traefik.port: 8080

  meta:
    image: hypedtext/meta:latest
    env_file: .env
    command: npm run start:dev
    ports:
      - 8081:8081
    volumes:
      - $PWD/modules/meta:/app
    networks:
      - ingres
    labels:
      traefik.enable: "true"
      traefik.network: "ingres"
      traefik.frontend.rule: "Host:meta.localhost"
      traefik.port: 8081

  fuseki:
    image: stain/jena-fuseki:latest
    env_file: .env
    ports:
      - 8082:3030
    volumes:
      - $PWD/.fuseki:/fuseki
    networks:
      - ingres
    labels:
      traefik.enable: "true"
      traefik.network: "ingres"
      traefik.frontend.rule: "Host:fuseki.localhost"
      traefik.port: 8082

  database:
    image: postgres
    networks:
      - ingres
    ports:
      - 5433:5432
    volumes:
      - database:/var/lib/postgresql/data
